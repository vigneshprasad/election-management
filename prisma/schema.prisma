generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Voter {
  id                              Int             @id @default(autoincrement())
  name                            String
  gender                          Gender
  age                             Int
  epicNo                          String          @unique
  acNo                            Int
  slNoInPart                      Int
  relationName                    String
  relationType                    Relation
  religion                        Religion?
  caste                           String?
  subcaste                        String?
  category                        Category?
  education                       Education?
  economicStatus                  EconomicStatus?
  phone                           String?
  profession                      String?
  village                         String?
  familyMembers                   Int?
  WhichPartyResponsibleForSchemes Party?
  PartyWorkingForKarnataka        Party?
  SymbolOfMTB                     Symbol?
  SymbolOfBachegowda              Symbol?
  createdAt                       DateTime        @default(now())
  updatedAt                       DateTime        @updatedAt
  partId                          Int
  verifiedAt                      DateTime?
  verifiedBy                      String?
  popularLeader                   Candidate?
  schemeAwareness                 YesNo?
  toiletConstruction              YesNo?
  PMAwasYojanaHousing             YesNo?
  PMStreetVendorAndMudraLoan      YesNo?
  JalJeevanPipedWater             YesNo?
  AyushmanHealthCard              YesNo?
  AvailServices                   YesNo?
  part                            Part            @relation(fields: [partId], references: [id])
  VoterEditLog                    VoterEditLog[]
}

model VoterEditLog {
  id        Int      @id @default(autoincrement())
  voterId   Int
  user      String
  oldData   Json?
  newData   Json?
  createdAt DateTime @default(now())
  voter     Voter    @relation(fields: [voterId], references: [id])
}

model UserPermissions {
  id      Int                   @id @default(autoincrement())
  user    String                @unique
  isAdmin Boolean
  parts   UserPartPermissions[]
}

model Part {
  id    Int                   @id
  name  String                @unique
  users UserPartPermissions[]
  Voter Voter[]
}

model UserPartPermissions {
  partId            Int
  userPermissionsId Int
  assignedAt        DateTime        @default(now())
  part              Part            @relation(fields: [partId], references: [id])
  userPermissions   UserPermissions @relation(fields: [userPermissionsId], references: [id])

  @@id([partId, userPermissionsId])
}

enum Relation {
  F
  M
  H
  O
}

enum Gender {
  M
  F
  T
}

enum Religion {
  HINDU
  MUSLIM
  CHRISTIAN
  OTHER
}

enum Category {
  GENERAL
  SCST
  OBC
}

enum Education {
  ILLITERATE
  PRIMARY
  MIDDLE
  MATRICULATION
  POSTMATRICULATION
  GRADUATION
  POSTGRADUATION
}

enum EconomicStatus {
  APL
  BPL
}

enum Party {
  BJP
  CONGRESS
  JDS
  OTHERS
  DONTKNOW
}

enum Symbol {
  HAND
  LOTUS
  DONTKNOW
  OTHER
}

enum Candidate {
  BACHEGOWDA
  SHARATHBACHEGOWDA
  MTBNAGARAJ
  MTBRAJESH
  DONTKNOW
  UNKNOWN
}

enum YesNo {
  YES
  NO
  UNKNOWN
  DONTKNOW
}
